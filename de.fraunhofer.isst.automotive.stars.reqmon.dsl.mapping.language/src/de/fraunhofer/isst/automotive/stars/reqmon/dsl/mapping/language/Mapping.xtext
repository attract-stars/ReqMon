grammar de.fraunhofer.isst.automotive.stars.reqmon.dsl.mapping.language.Mapping with org.eclipse.xtext.common.Terminals

import "http://www.eclipse.org/emf/2002/Ecore" as ecore
import "http://www.fraunhofer.de/isst/automotive/stars/reqmon/dsl/mapping/SysDef" as system


generate mapping "http://www.fraunhofer.de/isst/automotive/stars/reqmon/dsl/mapping/language/Mapping"


Model:
	 mappings+=Mapping* 
;
	
Mapping:
	definition=Definition 
	| rule=Rule
	| rule = NegationRule
;

Definition:
	def+=DefinitionElememnt
;

DefinitionElememnt:
	  def = MessageID
	| def = SignalID
	| def = ClassID
	| def = AttributeID
	| unit=Unit
	
	//| def = SystemID 
	//| def = StructureID
;

SystemID:
	def='system' system=[system::SystemNode | STRING]?
;

MessageID:
	def='message' mess=[system::MessageNode | STRING]?
;

SignalID:
	def='signal' signal=[system::SignalNode | STRING]?
;

StructureID:
	def='structure' struc=[system::DataStructureNode| STRING]?
;

ClassID:
	def='class' clas=[system::ClassNode | STRING]? 
;

AttributeID:
	def='attribute' attr=[system::AttributeNode | STRING]? 
;


Rule:
	neg+=Negation? '('* elem+=Element 
	(
		(
			  op+=Operators neg+=Negation? '('* elem+=Element 
			| neg+=Negation? op+='in' interval+=Intervall
		) ')'*
	)+
;

NegationRule:
	neg=Negation (attrOfDef=AttributeOfDefined | def=AttributeID)
;

Element:
	attrOfDef+=AttributeOfDefined
	| value=Value
	| def=Definition
	| ref=Ref
;



AttributeOfDefined:
	  system=SystemID getAttr+=GetAttributeSystem
	| message=MessageID getAttr+=GetAttributeMessage
	| signal=SignalID getAttr+=GetAttributeSignal
	| structure=StructureID getAttr+=GetAttributeStructure
	| object=ClassID getAttr+=GetAttributeClass
	| attribute=AttributeID getAttr+=GetAttributeAttribute
;

GetAttributeSystem:
	attr='.systemName_' systemName=[system::SystemNode | STRING]
	| attr='.systemVersion_' version=[system::VersionNode | STRING]
	| attr='.systemDescription_' description=[system::DescriptionNode | STRING]
	| attr='.systemMessage_' message=[system::MessageNode | STRING]
	| attr='.systemSignal_' signal=[system::SignalNode | STRING]
	| attr='.systemDatastructure_' datastruc=[system::DataStructureNode | STRING]
	| attr='.this_system'
;

GetAttributeMessage:
	attr='.messageName_' messageName=[system::MessageNode | STRING]
	| attr='.messageLocation_' location=[system::LocationNode | STRING]
	| attr='.messageBitsize_' bit=[system::BitNode | STRING]
	| attr='.messagesignal_' signalRef=[system::SignalRefNode | STRING]
	| attr='.this_message'
;

GetAttributeSignal:
	attr='.signalName_' signalName=[system::SignalNode | STRING]
	| attr='.signalID_' id=[system::IDAtrr | STRING]
	| attr='.signalDescription_' description=[system::DescriptionNode | STRING]
	| attr='.signalDatatype_' datatype=[system::DataTypeNode | STRING]
	| attr='.signalLocation_' location=[system::LocationNode | STRING]
	| attr='.signalBitsize_' bit=[system::BitNode | STRING]
	| attr='.signalMinvalue_' minvalue=[system::MinValueNode | STRING]
	| attr='.signalMaxvalue_' maxvalue=[system::MaxValueNode | STRING]
	| attr='.signalPrefvalue_' prefvalue=[system::PrefValueNode | STRING]
	| attr='.signalStepsize_' stepsize=[system::StepSizeNode | STRING]
	| attr='.this_signal'
;

GetAttributeStructure:
	attr='.structureName_' structureName=[system::DataStructureNode | STRING]
	| attr='.structureDescription_' description=[system::DescriptionNode | STRING]
	| attr='.structureLocation_' location=[system::LocationNode | STRING]
	| attr='.structureBitsize_' bit=[system::BitNode | STRING]
	| attr='.structureClass_' clas=[system::ClassNode | STRING]
	| attr='.this_structure'
;

GetAttributeClass:
	attr='.className_' className=[system::ClassNode | STRING]
	| attr='.classDescription_' description=[system::DescriptionNode | STRING]
	| attr='.classInheritance_from_' inherit=[system::InheritanceNode | STRING]
	| attr='.classAttribute_' attribute=[system::AttributeNode | STRING] 
			attrAttr=GetAttributeAttribute? attrSignal=GetAttributeSignal?
	| attr='.this_class'
;

GetAttributeAttribute:
	attr='.attributeName_' className=[system::AttributeNode | STRING]
	| attr='.attributeDescription_' description=[system::DescriptionNode | STRING]
	| attr='.attributeType_' type=[system::Type | STRING]
	| attr='.this_attribute'
;

Ref:
	'{' ref=INT '}'
;

Value:
	IntValue| FloatValue
;

IntValue:
	value=INT unit=[Unit | STRING]? 
;

FloatValue:
	value=FLOAT unit=[Unit | STRING]? 
;

Unit:
	def='unit' name=STRING ':=' unit=GetUnit
;

GetUnit:
	signal=SignalID get+='.signalDatatype_' datatype=[system::DataTypeNode | STRING]
;
	


/* =========== VALUES =========== */


Intervall:
	'[' lower=Value','higher=Value ']'
;



 
FLOAT returns ecore::EFloat:
	INT'.'INT
;



/* =========== BASIC SYNTAX =========== */

Operators:
	  Comparators 
	| Calculation 
	| Relative 
	| Conclusion 
	| Equivalence 
	| Junctor
;


Calculation:
	'+' | '-' | '*' | '/' | '^' 
;

Junctor:
	'&' | 'and'|
	'|' | 'or'
;
	
Comparators:
	'>'  |
	'<'  |
	'='  | 
	'>=' |
	'<='  
;

Conclusion:
	'=>' 
;

Equivalence:
	'<=>'
;

Relative:
	'~'
;

Negation:
	'!' | 'not'
;








