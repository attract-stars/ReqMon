/**
 * generated by Xtext 2.16.0
 */
package de.fraunhofer.isst.stars.requirementDSL.impl;

import de.fraunhofer.isst.stars.requirementDSL.Actors;
import de.fraunhofer.isst.stars.requirementDSL.AuxNeg;
import de.fraunhofer.isst.stars.requirementDSL.Constraints;
import de.fraunhofer.isst.stars.requirementDSL.Modality;
import de.fraunhofer.isst.stars.requirementDSL.PredOrObject;
import de.fraunhofer.isst.stars.requirementDSL.Property;
import de.fraunhofer.isst.stars.requirementDSL.PropertySentence;
import de.fraunhofer.isst.stars.requirementDSL.Relation;
import de.fraunhofer.isst.stars.requirementDSL.RequirementDSLPackage;
import de.fraunhofer.isst.stars.requirementDSL.SentenceEnding;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Property Sentence</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link de.fraunhofer.isst.stars.requirementDSL.impl.PropertySentenceImpl#getActors <em>Actors</em>}</li>
 *   <li>{@link de.fraunhofer.isst.stars.requirementDSL.impl.PropertySentenceImpl#getProperty <em>Property</em>}</li>
 *   <li>{@link de.fraunhofer.isst.stars.requirementDSL.impl.PropertySentenceImpl#getRela <em>Rela</em>}</li>
 *   <li>{@link de.fraunhofer.isst.stars.requirementDSL.impl.PropertySentenceImpl#getModality <em>Modality</em>}</li>
 *   <li>{@link de.fraunhofer.isst.stars.requirementDSL.impl.PropertySentenceImpl#isNegation <em>Negation</em>}</li>
 *   <li>{@link de.fraunhofer.isst.stars.requirementDSL.impl.PropertySentenceImpl#getAuxiliarVerb <em>Auxiliar Verb</em>}</li>
 *   <li>{@link de.fraunhofer.isst.stars.requirementDSL.impl.PropertySentenceImpl#getPredObj <em>Pred Obj</em>}</li>
 *   <li>{@link de.fraunhofer.isst.stars.requirementDSL.impl.PropertySentenceImpl#getEnding <em>Ending</em>}</li>
 *   <li>{@link de.fraunhofer.isst.stars.requirementDSL.impl.PropertySentenceImpl#getAuxNeg <em>Aux Neg</em>}</li>
 *   <li>{@link de.fraunhofer.isst.stars.requirementDSL.impl.PropertySentenceImpl#getConstraints <em>Constraints</em>}</li>
 * </ul>
 *
 * @generated
 */
public class PropertySentenceImpl extends ClauseImpl implements PropertySentence
{
  /**
   * The cached value of the '{@link #getActors() <em>Actors</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getActors()
   * @generated
   * @ordered
   */
  protected Actors actors;

  /**
   * The cached value of the '{@link #getProperty() <em>Property</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getProperty()
   * @generated
   * @ordered
   */
  protected Property property;

  /**
   * The cached value of the '{@link #getRela() <em>Rela</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRela()
   * @generated
   * @ordered
   */
  protected Relation rela;

  /**
   * The default value of the '{@link #getModality() <em>Modality</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getModality()
   * @generated
   * @ordered
   */
  protected static final Modality MODALITY_EDEFAULT = Modality.SHALL;

  /**
   * The cached value of the '{@link #getModality() <em>Modality</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getModality()
   * @generated
   * @ordered
   */
  protected Modality modality = MODALITY_EDEFAULT;

  /**
   * The default value of the '{@link #isNegation() <em>Negation</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isNegation()
   * @generated
   * @ordered
   */
  protected static final boolean NEGATION_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isNegation() <em>Negation</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isNegation()
   * @generated
   * @ordered
   */
  protected boolean negation = NEGATION_EDEFAULT;

  /**
   * The default value of the '{@link #getAuxiliarVerb() <em>Auxiliar Verb</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAuxiliarVerb()
   * @generated
   * @ordered
   */
  protected static final String AUXILIAR_VERB_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getAuxiliarVerb() <em>Auxiliar Verb</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAuxiliarVerb()
   * @generated
   * @ordered
   */
  protected String auxiliarVerb = AUXILIAR_VERB_EDEFAULT;

  /**
   * The cached value of the '{@link #getPredObj() <em>Pred Obj</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPredObj()
   * @generated
   * @ordered
   */
  protected PredOrObject predObj;

  /**
   * The cached value of the '{@link #getEnding() <em>Ending</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEnding()
   * @generated
   * @ordered
   */
  protected SentenceEnding ending;

  /**
   * The cached value of the '{@link #getAuxNeg() <em>Aux Neg</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAuxNeg()
   * @generated
   * @ordered
   */
  protected AuxNeg auxNeg;

  /**
   * The cached value of the '{@link #getConstraints() <em>Constraints</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getConstraints()
   * @generated
   * @ordered
   */
  protected Constraints constraints;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected PropertySentenceImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return RequirementDSLPackage.Literals.PROPERTY_SENTENCE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Actors getActors()
  {
    return actors;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetActors(Actors newActors, NotificationChain msgs)
  {
    Actors oldActors = actors;
    actors = newActors;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, RequirementDSLPackage.PROPERTY_SENTENCE__ACTORS, oldActors, newActors);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setActors(Actors newActors)
  {
    if (newActors != actors)
    {
      NotificationChain msgs = null;
      if (actors != null)
        msgs = ((InternalEObject)actors).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - RequirementDSLPackage.PROPERTY_SENTENCE__ACTORS, null, msgs);
      if (newActors != null)
        msgs = ((InternalEObject)newActors).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - RequirementDSLPackage.PROPERTY_SENTENCE__ACTORS, null, msgs);
      msgs = basicSetActors(newActors, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RequirementDSLPackage.PROPERTY_SENTENCE__ACTORS, newActors, newActors));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Property getProperty()
  {
    return property;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetProperty(Property newProperty, NotificationChain msgs)
  {
    Property oldProperty = property;
    property = newProperty;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, RequirementDSLPackage.PROPERTY_SENTENCE__PROPERTY, oldProperty, newProperty);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setProperty(Property newProperty)
  {
    if (newProperty != property)
    {
      NotificationChain msgs = null;
      if (property != null)
        msgs = ((InternalEObject)property).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - RequirementDSLPackage.PROPERTY_SENTENCE__PROPERTY, null, msgs);
      if (newProperty != null)
        msgs = ((InternalEObject)newProperty).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - RequirementDSLPackage.PROPERTY_SENTENCE__PROPERTY, null, msgs);
      msgs = basicSetProperty(newProperty, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RequirementDSLPackage.PROPERTY_SENTENCE__PROPERTY, newProperty, newProperty));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Relation getRela()
  {
    return rela;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetRela(Relation newRela, NotificationChain msgs)
  {
    Relation oldRela = rela;
    rela = newRela;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, RequirementDSLPackage.PROPERTY_SENTENCE__RELA, oldRela, newRela);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setRela(Relation newRela)
  {
    if (newRela != rela)
    {
      NotificationChain msgs = null;
      if (rela != null)
        msgs = ((InternalEObject)rela).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - RequirementDSLPackage.PROPERTY_SENTENCE__RELA, null, msgs);
      if (newRela != null)
        msgs = ((InternalEObject)newRela).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - RequirementDSLPackage.PROPERTY_SENTENCE__RELA, null, msgs);
      msgs = basicSetRela(newRela, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RequirementDSLPackage.PROPERTY_SENTENCE__RELA, newRela, newRela));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Modality getModality()
  {
    return modality;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setModality(Modality newModality)
  {
    Modality oldModality = modality;
    modality = newModality == null ? MODALITY_EDEFAULT : newModality;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RequirementDSLPackage.PROPERTY_SENTENCE__MODALITY, oldModality, modality));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean isNegation()
  {
    return negation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setNegation(boolean newNegation)
  {
    boolean oldNegation = negation;
    negation = newNegation;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RequirementDSLPackage.PROPERTY_SENTENCE__NEGATION, oldNegation, negation));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getAuxiliarVerb()
  {
    return auxiliarVerb;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setAuxiliarVerb(String newAuxiliarVerb)
  {
    String oldAuxiliarVerb = auxiliarVerb;
    auxiliarVerb = newAuxiliarVerb;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RequirementDSLPackage.PROPERTY_SENTENCE__AUXILIAR_VERB, oldAuxiliarVerb, auxiliarVerb));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public PredOrObject getPredObj()
  {
    return predObj;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetPredObj(PredOrObject newPredObj, NotificationChain msgs)
  {
    PredOrObject oldPredObj = predObj;
    predObj = newPredObj;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, RequirementDSLPackage.PROPERTY_SENTENCE__PRED_OBJ, oldPredObj, newPredObj);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setPredObj(PredOrObject newPredObj)
  {
    if (newPredObj != predObj)
    {
      NotificationChain msgs = null;
      if (predObj != null)
        msgs = ((InternalEObject)predObj).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - RequirementDSLPackage.PROPERTY_SENTENCE__PRED_OBJ, null, msgs);
      if (newPredObj != null)
        msgs = ((InternalEObject)newPredObj).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - RequirementDSLPackage.PROPERTY_SENTENCE__PRED_OBJ, null, msgs);
      msgs = basicSetPredObj(newPredObj, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RequirementDSLPackage.PROPERTY_SENTENCE__PRED_OBJ, newPredObj, newPredObj));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public SentenceEnding getEnding()
  {
    return ending;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetEnding(SentenceEnding newEnding, NotificationChain msgs)
  {
    SentenceEnding oldEnding = ending;
    ending = newEnding;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, RequirementDSLPackage.PROPERTY_SENTENCE__ENDING, oldEnding, newEnding);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setEnding(SentenceEnding newEnding)
  {
    if (newEnding != ending)
    {
      NotificationChain msgs = null;
      if (ending != null)
        msgs = ((InternalEObject)ending).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - RequirementDSLPackage.PROPERTY_SENTENCE__ENDING, null, msgs);
      if (newEnding != null)
        msgs = ((InternalEObject)newEnding).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - RequirementDSLPackage.PROPERTY_SENTENCE__ENDING, null, msgs);
      msgs = basicSetEnding(newEnding, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RequirementDSLPackage.PROPERTY_SENTENCE__ENDING, newEnding, newEnding));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AuxNeg getAuxNeg()
  {
    return auxNeg;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetAuxNeg(AuxNeg newAuxNeg, NotificationChain msgs)
  {
    AuxNeg oldAuxNeg = auxNeg;
    auxNeg = newAuxNeg;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, RequirementDSLPackage.PROPERTY_SENTENCE__AUX_NEG, oldAuxNeg, newAuxNeg);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setAuxNeg(AuxNeg newAuxNeg)
  {
    if (newAuxNeg != auxNeg)
    {
      NotificationChain msgs = null;
      if (auxNeg != null)
        msgs = ((InternalEObject)auxNeg).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - RequirementDSLPackage.PROPERTY_SENTENCE__AUX_NEG, null, msgs);
      if (newAuxNeg != null)
        msgs = ((InternalEObject)newAuxNeg).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - RequirementDSLPackage.PROPERTY_SENTENCE__AUX_NEG, null, msgs);
      msgs = basicSetAuxNeg(newAuxNeg, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RequirementDSLPackage.PROPERTY_SENTENCE__AUX_NEG, newAuxNeg, newAuxNeg));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Constraints getConstraints()
  {
    return constraints;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetConstraints(Constraints newConstraints, NotificationChain msgs)
  {
    Constraints oldConstraints = constraints;
    constraints = newConstraints;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, RequirementDSLPackage.PROPERTY_SENTENCE__CONSTRAINTS, oldConstraints, newConstraints);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setConstraints(Constraints newConstraints)
  {
    if (newConstraints != constraints)
    {
      NotificationChain msgs = null;
      if (constraints != null)
        msgs = ((InternalEObject)constraints).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - RequirementDSLPackage.PROPERTY_SENTENCE__CONSTRAINTS, null, msgs);
      if (newConstraints != null)
        msgs = ((InternalEObject)newConstraints).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - RequirementDSLPackage.PROPERTY_SENTENCE__CONSTRAINTS, null, msgs);
      msgs = basicSetConstraints(newConstraints, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RequirementDSLPackage.PROPERTY_SENTENCE__CONSTRAINTS, newConstraints, newConstraints));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case RequirementDSLPackage.PROPERTY_SENTENCE__ACTORS:
        return basicSetActors(null, msgs);
      case RequirementDSLPackage.PROPERTY_SENTENCE__PROPERTY:
        return basicSetProperty(null, msgs);
      case RequirementDSLPackage.PROPERTY_SENTENCE__RELA:
        return basicSetRela(null, msgs);
      case RequirementDSLPackage.PROPERTY_SENTENCE__PRED_OBJ:
        return basicSetPredObj(null, msgs);
      case RequirementDSLPackage.PROPERTY_SENTENCE__ENDING:
        return basicSetEnding(null, msgs);
      case RequirementDSLPackage.PROPERTY_SENTENCE__AUX_NEG:
        return basicSetAuxNeg(null, msgs);
      case RequirementDSLPackage.PROPERTY_SENTENCE__CONSTRAINTS:
        return basicSetConstraints(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case RequirementDSLPackage.PROPERTY_SENTENCE__ACTORS:
        return getActors();
      case RequirementDSLPackage.PROPERTY_SENTENCE__PROPERTY:
        return getProperty();
      case RequirementDSLPackage.PROPERTY_SENTENCE__RELA:
        return getRela();
      case RequirementDSLPackage.PROPERTY_SENTENCE__MODALITY:
        return getModality();
      case RequirementDSLPackage.PROPERTY_SENTENCE__NEGATION:
        return isNegation();
      case RequirementDSLPackage.PROPERTY_SENTENCE__AUXILIAR_VERB:
        return getAuxiliarVerb();
      case RequirementDSLPackage.PROPERTY_SENTENCE__PRED_OBJ:
        return getPredObj();
      case RequirementDSLPackage.PROPERTY_SENTENCE__ENDING:
        return getEnding();
      case RequirementDSLPackage.PROPERTY_SENTENCE__AUX_NEG:
        return getAuxNeg();
      case RequirementDSLPackage.PROPERTY_SENTENCE__CONSTRAINTS:
        return getConstraints();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case RequirementDSLPackage.PROPERTY_SENTENCE__ACTORS:
        setActors((Actors)newValue);
        return;
      case RequirementDSLPackage.PROPERTY_SENTENCE__PROPERTY:
        setProperty((Property)newValue);
        return;
      case RequirementDSLPackage.PROPERTY_SENTENCE__RELA:
        setRela((Relation)newValue);
        return;
      case RequirementDSLPackage.PROPERTY_SENTENCE__MODALITY:
        setModality((Modality)newValue);
        return;
      case RequirementDSLPackage.PROPERTY_SENTENCE__NEGATION:
        setNegation((Boolean)newValue);
        return;
      case RequirementDSLPackage.PROPERTY_SENTENCE__AUXILIAR_VERB:
        setAuxiliarVerb((String)newValue);
        return;
      case RequirementDSLPackage.PROPERTY_SENTENCE__PRED_OBJ:
        setPredObj((PredOrObject)newValue);
        return;
      case RequirementDSLPackage.PROPERTY_SENTENCE__ENDING:
        setEnding((SentenceEnding)newValue);
        return;
      case RequirementDSLPackage.PROPERTY_SENTENCE__AUX_NEG:
        setAuxNeg((AuxNeg)newValue);
        return;
      case RequirementDSLPackage.PROPERTY_SENTENCE__CONSTRAINTS:
        setConstraints((Constraints)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case RequirementDSLPackage.PROPERTY_SENTENCE__ACTORS:
        setActors((Actors)null);
        return;
      case RequirementDSLPackage.PROPERTY_SENTENCE__PROPERTY:
        setProperty((Property)null);
        return;
      case RequirementDSLPackage.PROPERTY_SENTENCE__RELA:
        setRela((Relation)null);
        return;
      case RequirementDSLPackage.PROPERTY_SENTENCE__MODALITY:
        setModality(MODALITY_EDEFAULT);
        return;
      case RequirementDSLPackage.PROPERTY_SENTENCE__NEGATION:
        setNegation(NEGATION_EDEFAULT);
        return;
      case RequirementDSLPackage.PROPERTY_SENTENCE__AUXILIAR_VERB:
        setAuxiliarVerb(AUXILIAR_VERB_EDEFAULT);
        return;
      case RequirementDSLPackage.PROPERTY_SENTENCE__PRED_OBJ:
        setPredObj((PredOrObject)null);
        return;
      case RequirementDSLPackage.PROPERTY_SENTENCE__ENDING:
        setEnding((SentenceEnding)null);
        return;
      case RequirementDSLPackage.PROPERTY_SENTENCE__AUX_NEG:
        setAuxNeg((AuxNeg)null);
        return;
      case RequirementDSLPackage.PROPERTY_SENTENCE__CONSTRAINTS:
        setConstraints((Constraints)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case RequirementDSLPackage.PROPERTY_SENTENCE__ACTORS:
        return actors != null;
      case RequirementDSLPackage.PROPERTY_SENTENCE__PROPERTY:
        return property != null;
      case RequirementDSLPackage.PROPERTY_SENTENCE__RELA:
        return rela != null;
      case RequirementDSLPackage.PROPERTY_SENTENCE__MODALITY:
        return modality != MODALITY_EDEFAULT;
      case RequirementDSLPackage.PROPERTY_SENTENCE__NEGATION:
        return negation != NEGATION_EDEFAULT;
      case RequirementDSLPackage.PROPERTY_SENTENCE__AUXILIAR_VERB:
        return AUXILIAR_VERB_EDEFAULT == null ? auxiliarVerb != null : !AUXILIAR_VERB_EDEFAULT.equals(auxiliarVerb);
      case RequirementDSLPackage.PROPERTY_SENTENCE__PRED_OBJ:
        return predObj != null;
      case RequirementDSLPackage.PROPERTY_SENTENCE__ENDING:
        return ending != null;
      case RequirementDSLPackage.PROPERTY_SENTENCE__AUX_NEG:
        return auxNeg != null;
      case RequirementDSLPackage.PROPERTY_SENTENCE__CONSTRAINTS:
        return constraints != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (modality: ");
    result.append(modality);
    result.append(", negation: ");
    result.append(negation);
    result.append(", auxiliarVerb: ");
    result.append(auxiliarVerb);
    result.append(')');
    return result.toString();
  }

} //PropertySentenceImpl
