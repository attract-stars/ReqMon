/**
 * generated by Xtext 2.17.1
 */
package de.fraunhofer.isst.stars.requirementDSL.impl;

import de.fraunhofer.isst.stars.requirementDSL.Actors;
import de.fraunhofer.isst.stars.requirementDSL.Modality;
import de.fraunhofer.isst.stars.requirementDSL.ModalitySentence;
import de.fraunhofer.isst.stars.requirementDSL.Predicate;
import de.fraunhofer.isst.stars.requirementDSL.RequirementDSLPackage;
import de.fraunhofer.isst.stars.requirementDSL.SentenceBegin;
import de.fraunhofer.isst.stars.requirementDSL.SentenceEnding;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Modality Sentence</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link de.fraunhofer.isst.stars.requirementDSL.impl.ModalitySentenceImpl#getBegin <em>Begin</em>}</li>
 *   <li>{@link de.fraunhofer.isst.stars.requirementDSL.impl.ModalitySentenceImpl#getActors <em>Actors</em>}</li>
 *   <li>{@link de.fraunhofer.isst.stars.requirementDSL.impl.ModalitySentenceImpl#getModelity <em>Modelity</em>}</li>
 *   <li>{@link de.fraunhofer.isst.stars.requirementDSL.impl.ModalitySentenceImpl#isNegation <em>Negation</em>}</li>
 *   <li>{@link de.fraunhofer.isst.stars.requirementDSL.impl.ModalitySentenceImpl#getAuxiliarVerb <em>Auxiliar Verb</em>}</li>
 *   <li>{@link de.fraunhofer.isst.stars.requirementDSL.impl.ModalitySentenceImpl#getPredicate <em>Predicate</em>}</li>
 *   <li>{@link de.fraunhofer.isst.stars.requirementDSL.impl.ModalitySentenceImpl#getEnding <em>Ending</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ModalitySentenceImpl extends ClauseImpl implements ModalitySentence
{
  /**
   * The cached value of the '{@link #getBegin() <em>Begin</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBegin()
   * @generated
   * @ordered
   */
  protected SentenceBegin begin;

  /**
   * The cached value of the '{@link #getActors() <em>Actors</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getActors()
   * @generated
   * @ordered
   */
  protected Actors actors;

  /**
   * The default value of the '{@link #getModelity() <em>Modelity</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getModelity()
   * @generated
   * @ordered
   */
  protected static final Modality MODELITY_EDEFAULT = Modality.SHALL;

  /**
   * The cached value of the '{@link #getModelity() <em>Modelity</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getModelity()
   * @generated
   * @ordered
   */
  protected Modality modelity = MODELITY_EDEFAULT;

  /**
   * The default value of the '{@link #isNegation() <em>Negation</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isNegation()
   * @generated
   * @ordered
   */
  protected static final boolean NEGATION_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isNegation() <em>Negation</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isNegation()
   * @generated
   * @ordered
   */
  protected boolean negation = NEGATION_EDEFAULT;

  /**
   * The default value of the '{@link #getAuxiliarVerb() <em>Auxiliar Verb</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAuxiliarVerb()
   * @generated
   * @ordered
   */
  protected static final String AUXILIAR_VERB_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getAuxiliarVerb() <em>Auxiliar Verb</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAuxiliarVerb()
   * @generated
   * @ordered
   */
  protected String auxiliarVerb = AUXILIAR_VERB_EDEFAULT;

  /**
   * The cached value of the '{@link #getPredicate() <em>Predicate</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPredicate()
   * @generated
   * @ordered
   */
  protected Predicate predicate;

  /**
   * The cached value of the '{@link #getEnding() <em>Ending</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEnding()
   * @generated
   * @ordered
   */
  protected SentenceEnding ending;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ModalitySentenceImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return RequirementDSLPackage.Literals.MODALITY_SENTENCE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public SentenceBegin getBegin()
  {
    return begin;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetBegin(SentenceBegin newBegin, NotificationChain msgs)
  {
    SentenceBegin oldBegin = begin;
    begin = newBegin;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, RequirementDSLPackage.MODALITY_SENTENCE__BEGIN, oldBegin, newBegin);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setBegin(SentenceBegin newBegin)
  {
    if (newBegin != begin)
    {
      NotificationChain msgs = null;
      if (begin != null)
        msgs = ((InternalEObject)begin).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - RequirementDSLPackage.MODALITY_SENTENCE__BEGIN, null, msgs);
      if (newBegin != null)
        msgs = ((InternalEObject)newBegin).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - RequirementDSLPackage.MODALITY_SENTENCE__BEGIN, null, msgs);
      msgs = basicSetBegin(newBegin, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RequirementDSLPackage.MODALITY_SENTENCE__BEGIN, newBegin, newBegin));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Actors getActors()
  {
    return actors;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetActors(Actors newActors, NotificationChain msgs)
  {
    Actors oldActors = actors;
    actors = newActors;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, RequirementDSLPackage.MODALITY_SENTENCE__ACTORS, oldActors, newActors);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setActors(Actors newActors)
  {
    if (newActors != actors)
    {
      NotificationChain msgs = null;
      if (actors != null)
        msgs = ((InternalEObject)actors).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - RequirementDSLPackage.MODALITY_SENTENCE__ACTORS, null, msgs);
      if (newActors != null)
        msgs = ((InternalEObject)newActors).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - RequirementDSLPackage.MODALITY_SENTENCE__ACTORS, null, msgs);
      msgs = basicSetActors(newActors, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RequirementDSLPackage.MODALITY_SENTENCE__ACTORS, newActors, newActors));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Modality getModelity()
  {
    return modelity;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setModelity(Modality newModelity)
  {
    Modality oldModelity = modelity;
    modelity = newModelity == null ? MODELITY_EDEFAULT : newModelity;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RequirementDSLPackage.MODALITY_SENTENCE__MODELITY, oldModelity, modelity));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isNegation()
  {
    return negation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setNegation(boolean newNegation)
  {
    boolean oldNegation = negation;
    negation = newNegation;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RequirementDSLPackage.MODALITY_SENTENCE__NEGATION, oldNegation, negation));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getAuxiliarVerb()
  {
    return auxiliarVerb;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setAuxiliarVerb(String newAuxiliarVerb)
  {
    String oldAuxiliarVerb = auxiliarVerb;
    auxiliarVerb = newAuxiliarVerb;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RequirementDSLPackage.MODALITY_SENTENCE__AUXILIAR_VERB, oldAuxiliarVerb, auxiliarVerb));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Predicate getPredicate()
  {
    return predicate;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetPredicate(Predicate newPredicate, NotificationChain msgs)
  {
    Predicate oldPredicate = predicate;
    predicate = newPredicate;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, RequirementDSLPackage.MODALITY_SENTENCE__PREDICATE, oldPredicate, newPredicate);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setPredicate(Predicate newPredicate)
  {
    if (newPredicate != predicate)
    {
      NotificationChain msgs = null;
      if (predicate != null)
        msgs = ((InternalEObject)predicate).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - RequirementDSLPackage.MODALITY_SENTENCE__PREDICATE, null, msgs);
      if (newPredicate != null)
        msgs = ((InternalEObject)newPredicate).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - RequirementDSLPackage.MODALITY_SENTENCE__PREDICATE, null, msgs);
      msgs = basicSetPredicate(newPredicate, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RequirementDSLPackage.MODALITY_SENTENCE__PREDICATE, newPredicate, newPredicate));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public SentenceEnding getEnding()
  {
    return ending;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetEnding(SentenceEnding newEnding, NotificationChain msgs)
  {
    SentenceEnding oldEnding = ending;
    ending = newEnding;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, RequirementDSLPackage.MODALITY_SENTENCE__ENDING, oldEnding, newEnding);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setEnding(SentenceEnding newEnding)
  {
    if (newEnding != ending)
    {
      NotificationChain msgs = null;
      if (ending != null)
        msgs = ((InternalEObject)ending).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - RequirementDSLPackage.MODALITY_SENTENCE__ENDING, null, msgs);
      if (newEnding != null)
        msgs = ((InternalEObject)newEnding).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - RequirementDSLPackage.MODALITY_SENTENCE__ENDING, null, msgs);
      msgs = basicSetEnding(newEnding, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RequirementDSLPackage.MODALITY_SENTENCE__ENDING, newEnding, newEnding));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case RequirementDSLPackage.MODALITY_SENTENCE__BEGIN:
        return basicSetBegin(null, msgs);
      case RequirementDSLPackage.MODALITY_SENTENCE__ACTORS:
        return basicSetActors(null, msgs);
      case RequirementDSLPackage.MODALITY_SENTENCE__PREDICATE:
        return basicSetPredicate(null, msgs);
      case RequirementDSLPackage.MODALITY_SENTENCE__ENDING:
        return basicSetEnding(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case RequirementDSLPackage.MODALITY_SENTENCE__BEGIN:
        return getBegin();
      case RequirementDSLPackage.MODALITY_SENTENCE__ACTORS:
        return getActors();
      case RequirementDSLPackage.MODALITY_SENTENCE__MODELITY:
        return getModelity();
      case RequirementDSLPackage.MODALITY_SENTENCE__NEGATION:
        return isNegation();
      case RequirementDSLPackage.MODALITY_SENTENCE__AUXILIAR_VERB:
        return getAuxiliarVerb();
      case RequirementDSLPackage.MODALITY_SENTENCE__PREDICATE:
        return getPredicate();
      case RequirementDSLPackage.MODALITY_SENTENCE__ENDING:
        return getEnding();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case RequirementDSLPackage.MODALITY_SENTENCE__BEGIN:
        setBegin((SentenceBegin)newValue);
        return;
      case RequirementDSLPackage.MODALITY_SENTENCE__ACTORS:
        setActors((Actors)newValue);
        return;
      case RequirementDSLPackage.MODALITY_SENTENCE__MODELITY:
        setModelity((Modality)newValue);
        return;
      case RequirementDSLPackage.MODALITY_SENTENCE__NEGATION:
        setNegation((Boolean)newValue);
        return;
      case RequirementDSLPackage.MODALITY_SENTENCE__AUXILIAR_VERB:
        setAuxiliarVerb((String)newValue);
        return;
      case RequirementDSLPackage.MODALITY_SENTENCE__PREDICATE:
        setPredicate((Predicate)newValue);
        return;
      case RequirementDSLPackage.MODALITY_SENTENCE__ENDING:
        setEnding((SentenceEnding)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case RequirementDSLPackage.MODALITY_SENTENCE__BEGIN:
        setBegin((SentenceBegin)null);
        return;
      case RequirementDSLPackage.MODALITY_SENTENCE__ACTORS:
        setActors((Actors)null);
        return;
      case RequirementDSLPackage.MODALITY_SENTENCE__MODELITY:
        setModelity(MODELITY_EDEFAULT);
        return;
      case RequirementDSLPackage.MODALITY_SENTENCE__NEGATION:
        setNegation(NEGATION_EDEFAULT);
        return;
      case RequirementDSLPackage.MODALITY_SENTENCE__AUXILIAR_VERB:
        setAuxiliarVerb(AUXILIAR_VERB_EDEFAULT);
        return;
      case RequirementDSLPackage.MODALITY_SENTENCE__PREDICATE:
        setPredicate((Predicate)null);
        return;
      case RequirementDSLPackage.MODALITY_SENTENCE__ENDING:
        setEnding((SentenceEnding)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case RequirementDSLPackage.MODALITY_SENTENCE__BEGIN:
        return begin != null;
      case RequirementDSLPackage.MODALITY_SENTENCE__ACTORS:
        return actors != null;
      case RequirementDSLPackage.MODALITY_SENTENCE__MODELITY:
        return modelity != MODELITY_EDEFAULT;
      case RequirementDSLPackage.MODALITY_SENTENCE__NEGATION:
        return negation != NEGATION_EDEFAULT;
      case RequirementDSLPackage.MODALITY_SENTENCE__AUXILIAR_VERB:
        return AUXILIAR_VERB_EDEFAULT == null ? auxiliarVerb != null : !AUXILIAR_VERB_EDEFAULT.equals(auxiliarVerb);
      case RequirementDSLPackage.MODALITY_SENTENCE__PREDICATE:
        return predicate != null;
      case RequirementDSLPackage.MODALITY_SENTENCE__ENDING:
        return ending != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (modelity: ");
    result.append(modelity);
    result.append(", negation: ");
    result.append(negation);
    result.append(", auxiliarVerb: ");
    result.append(auxiliarVerb);
    result.append(')');
    return result.toString();
  }

} //ModalitySentenceImpl
