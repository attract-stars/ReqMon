/**
 * generated by Xtext 2.17.1
 */
package de.fraunhofer.isst.stars.requirementDSL.impl;

import de.fraunhofer.isst.stars.requirementDSL.Actors;
import de.fraunhofer.isst.stars.requirementDSL.AuxNeg;
import de.fraunhofer.isst.stars.requirementDSL.PredicateSentence;
import de.fraunhofer.isst.stars.requirementDSL.Preds;
import de.fraunhofer.isst.stars.requirementDSL.RequirementDSLPackage;
import de.fraunhofer.isst.stars.requirementDSL.SentenceBegin;
import de.fraunhofer.isst.stars.requirementDSL.SentenceEnding;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.util.EDataTypeEList;
import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Predicate Sentence</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link de.fraunhofer.isst.stars.requirementDSL.impl.PredicateSentenceImpl#getBegin <em>Begin</em>}</li>
 *   <li>{@link de.fraunhofer.isst.stars.requirementDSL.impl.PredicateSentenceImpl#getActors <em>Actors</em>}</li>
 *   <li>{@link de.fraunhofer.isst.stars.requirementDSL.impl.PredicateSentenceImpl#getAuxNeg <em>Aux Neg</em>}</li>
 *   <li>{@link de.fraunhofer.isst.stars.requirementDSL.impl.PredicateSentenceImpl#getAuxiliarVerb <em>Auxiliar Verb</em>}</li>
 *   <li>{@link de.fraunhofer.isst.stars.requirementDSL.impl.PredicateSentenceImpl#getPreds <em>Preds</em>}</li>
 *   <li>{@link de.fraunhofer.isst.stars.requirementDSL.impl.PredicateSentenceImpl#getEnding <em>Ending</em>}</li>
 * </ul>
 *
 * @generated
 */
public class PredicateSentenceImpl extends ClauseImpl implements PredicateSentence
{
  /**
   * The cached value of the '{@link #getBegin() <em>Begin</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBegin()
   * @generated
   * @ordered
   */
  protected SentenceBegin begin;

  /**
   * The cached value of the '{@link #getActors() <em>Actors</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getActors()
   * @generated
   * @ordered
   */
  protected Actors actors;

  /**
   * The cached value of the '{@link #getAuxNeg() <em>Aux Neg</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAuxNeg()
   * @generated
   * @ordered
   */
  protected EList<AuxNeg> auxNeg;

  /**
   * The cached value of the '{@link #getAuxiliarVerb() <em>Auxiliar Verb</em>}' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAuxiliarVerb()
   * @generated
   * @ordered
   */
  protected EList<String> auxiliarVerb;

  /**
   * The cached value of the '{@link #getPreds() <em>Preds</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPreds()
   * @generated
   * @ordered
   */
  protected Preds preds;

  /**
   * The cached value of the '{@link #getEnding() <em>Ending</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEnding()
   * @generated
   * @ordered
   */
  protected SentenceEnding ending;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected PredicateSentenceImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return RequirementDSLPackage.Literals.PREDICATE_SENTENCE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public SentenceBegin getBegin()
  {
    return begin;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetBegin(SentenceBegin newBegin, NotificationChain msgs)
  {
    SentenceBegin oldBegin = begin;
    begin = newBegin;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, RequirementDSLPackage.PREDICATE_SENTENCE__BEGIN, oldBegin, newBegin);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setBegin(SentenceBegin newBegin)
  {
    if (newBegin != begin)
    {
      NotificationChain msgs = null;
      if (begin != null)
        msgs = ((InternalEObject)begin).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - RequirementDSLPackage.PREDICATE_SENTENCE__BEGIN, null, msgs);
      if (newBegin != null)
        msgs = ((InternalEObject)newBegin).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - RequirementDSLPackage.PREDICATE_SENTENCE__BEGIN, null, msgs);
      msgs = basicSetBegin(newBegin, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RequirementDSLPackage.PREDICATE_SENTENCE__BEGIN, newBegin, newBegin));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Actors getActors()
  {
    return actors;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetActors(Actors newActors, NotificationChain msgs)
  {
    Actors oldActors = actors;
    actors = newActors;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, RequirementDSLPackage.PREDICATE_SENTENCE__ACTORS, oldActors, newActors);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setActors(Actors newActors)
  {
    if (newActors != actors)
    {
      NotificationChain msgs = null;
      if (actors != null)
        msgs = ((InternalEObject)actors).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - RequirementDSLPackage.PREDICATE_SENTENCE__ACTORS, null, msgs);
      if (newActors != null)
        msgs = ((InternalEObject)newActors).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - RequirementDSLPackage.PREDICATE_SENTENCE__ACTORS, null, msgs);
      msgs = basicSetActors(newActors, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RequirementDSLPackage.PREDICATE_SENTENCE__ACTORS, newActors, newActors));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<AuxNeg> getAuxNeg()
  {
    if (auxNeg == null)
    {
      auxNeg = new EObjectContainmentEList<AuxNeg>(AuxNeg.class, this, RequirementDSLPackage.PREDICATE_SENTENCE__AUX_NEG);
    }
    return auxNeg;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<String> getAuxiliarVerb()
  {
    if (auxiliarVerb == null)
    {
      auxiliarVerb = new EDataTypeEList<String>(String.class, this, RequirementDSLPackage.PREDICATE_SENTENCE__AUXILIAR_VERB);
    }
    return auxiliarVerb;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Preds getPreds()
  {
    return preds;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetPreds(Preds newPreds, NotificationChain msgs)
  {
    Preds oldPreds = preds;
    preds = newPreds;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, RequirementDSLPackage.PREDICATE_SENTENCE__PREDS, oldPreds, newPreds);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setPreds(Preds newPreds)
  {
    if (newPreds != preds)
    {
      NotificationChain msgs = null;
      if (preds != null)
        msgs = ((InternalEObject)preds).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - RequirementDSLPackage.PREDICATE_SENTENCE__PREDS, null, msgs);
      if (newPreds != null)
        msgs = ((InternalEObject)newPreds).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - RequirementDSLPackage.PREDICATE_SENTENCE__PREDS, null, msgs);
      msgs = basicSetPreds(newPreds, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RequirementDSLPackage.PREDICATE_SENTENCE__PREDS, newPreds, newPreds));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public SentenceEnding getEnding()
  {
    return ending;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetEnding(SentenceEnding newEnding, NotificationChain msgs)
  {
    SentenceEnding oldEnding = ending;
    ending = newEnding;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, RequirementDSLPackage.PREDICATE_SENTENCE__ENDING, oldEnding, newEnding);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setEnding(SentenceEnding newEnding)
  {
    if (newEnding != ending)
    {
      NotificationChain msgs = null;
      if (ending != null)
        msgs = ((InternalEObject)ending).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - RequirementDSLPackage.PREDICATE_SENTENCE__ENDING, null, msgs);
      if (newEnding != null)
        msgs = ((InternalEObject)newEnding).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - RequirementDSLPackage.PREDICATE_SENTENCE__ENDING, null, msgs);
      msgs = basicSetEnding(newEnding, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RequirementDSLPackage.PREDICATE_SENTENCE__ENDING, newEnding, newEnding));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case RequirementDSLPackage.PREDICATE_SENTENCE__BEGIN:
        return basicSetBegin(null, msgs);
      case RequirementDSLPackage.PREDICATE_SENTENCE__ACTORS:
        return basicSetActors(null, msgs);
      case RequirementDSLPackage.PREDICATE_SENTENCE__AUX_NEG:
        return ((InternalEList<?>)getAuxNeg()).basicRemove(otherEnd, msgs);
      case RequirementDSLPackage.PREDICATE_SENTENCE__PREDS:
        return basicSetPreds(null, msgs);
      case RequirementDSLPackage.PREDICATE_SENTENCE__ENDING:
        return basicSetEnding(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case RequirementDSLPackage.PREDICATE_SENTENCE__BEGIN:
        return getBegin();
      case RequirementDSLPackage.PREDICATE_SENTENCE__ACTORS:
        return getActors();
      case RequirementDSLPackage.PREDICATE_SENTENCE__AUX_NEG:
        return getAuxNeg();
      case RequirementDSLPackage.PREDICATE_SENTENCE__AUXILIAR_VERB:
        return getAuxiliarVerb();
      case RequirementDSLPackage.PREDICATE_SENTENCE__PREDS:
        return getPreds();
      case RequirementDSLPackage.PREDICATE_SENTENCE__ENDING:
        return getEnding();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case RequirementDSLPackage.PREDICATE_SENTENCE__BEGIN:
        setBegin((SentenceBegin)newValue);
        return;
      case RequirementDSLPackage.PREDICATE_SENTENCE__ACTORS:
        setActors((Actors)newValue);
        return;
      case RequirementDSLPackage.PREDICATE_SENTENCE__AUX_NEG:
        getAuxNeg().clear();
        getAuxNeg().addAll((Collection<? extends AuxNeg>)newValue);
        return;
      case RequirementDSLPackage.PREDICATE_SENTENCE__AUXILIAR_VERB:
        getAuxiliarVerb().clear();
        getAuxiliarVerb().addAll((Collection<? extends String>)newValue);
        return;
      case RequirementDSLPackage.PREDICATE_SENTENCE__PREDS:
        setPreds((Preds)newValue);
        return;
      case RequirementDSLPackage.PREDICATE_SENTENCE__ENDING:
        setEnding((SentenceEnding)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case RequirementDSLPackage.PREDICATE_SENTENCE__BEGIN:
        setBegin((SentenceBegin)null);
        return;
      case RequirementDSLPackage.PREDICATE_SENTENCE__ACTORS:
        setActors((Actors)null);
        return;
      case RequirementDSLPackage.PREDICATE_SENTENCE__AUX_NEG:
        getAuxNeg().clear();
        return;
      case RequirementDSLPackage.PREDICATE_SENTENCE__AUXILIAR_VERB:
        getAuxiliarVerb().clear();
        return;
      case RequirementDSLPackage.PREDICATE_SENTENCE__PREDS:
        setPreds((Preds)null);
        return;
      case RequirementDSLPackage.PREDICATE_SENTENCE__ENDING:
        setEnding((SentenceEnding)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case RequirementDSLPackage.PREDICATE_SENTENCE__BEGIN:
        return begin != null;
      case RequirementDSLPackage.PREDICATE_SENTENCE__ACTORS:
        return actors != null;
      case RequirementDSLPackage.PREDICATE_SENTENCE__AUX_NEG:
        return auxNeg != null && !auxNeg.isEmpty();
      case RequirementDSLPackage.PREDICATE_SENTENCE__AUXILIAR_VERB:
        return auxiliarVerb != null && !auxiliarVerb.isEmpty();
      case RequirementDSLPackage.PREDICATE_SENTENCE__PREDS:
        return preds != null;
      case RequirementDSLPackage.PREDICATE_SENTENCE__ENDING:
        return ending != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (auxiliarVerb: ");
    result.append(auxiliarVerb);
    result.append(')');
    return result.toString();
  }

} //PredicateSentenceImpl
