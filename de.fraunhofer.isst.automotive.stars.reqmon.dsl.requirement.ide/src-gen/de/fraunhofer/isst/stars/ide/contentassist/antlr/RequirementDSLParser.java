/*
 * generated by Xtext 2.14.0
 */
package de.fraunhofer.isst.stars.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import de.fraunhofer.isst.stars.ide.contentassist.antlr.internal.InternalRequirementDSLParser;
import de.fraunhofer.isst.stars.services.RequirementDSLGrammarAccess;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;

public class RequirementDSLParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(RequirementDSLGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, RequirementDSLGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getRequirementAccess().getAlternatives_2(), "rule__Requirement__Alternatives_2");
			builder.put(grammarAccess.getRequirementAccess().getAlternatives_4(), "rule__Requirement__Alternatives_4");
			builder.put(grammarAccess.getClauseAccess().getAlternatives(), "rule__Clause__Alternatives");
			builder.put(grammarAccess.getPredicateSentenceAccess().getAlternatives(), "rule__PredicateSentence__Alternatives");
			builder.put(grammarAccess.getPropertySentenceAccess().getAlternatives(), "rule__PropertySentence__Alternatives");
			builder.put(grammarAccess.getPropertySentenceAccess().getAlternatives_2_3(), "rule__PropertySentence__Alternatives_2_3");
			builder.put(grammarAccess.getPropertySentenceAccess().getAlternatives_2_3_0_0(), "rule__PropertySentence__Alternatives_2_3_0_0");
			builder.put(grammarAccess.getPropertySentenceAccess().getAlternatives_3_1(), "rule__PropertySentence__Alternatives_3_1");
			builder.put(grammarAccess.getPropertyAccess().getAlternatives_0(), "rule__Property__Alternatives_0");
			builder.put(grammarAccess.getPropertyAccess().getAlternatives_1(), "rule__Property__Alternatives_1");
			builder.put(grammarAccess.getPropertyAccess().getAlternatives_3(), "rule__Property__Alternatives_3");
			builder.put(grammarAccess.getRelativeSentenceAccess().getAlternatives(), "rule__RelativeSentence__Alternatives");
			builder.put(grammarAccess.getRelativeSentenceAccess().getAlternatives_2_1(), "rule__RelativeSentence__Alternatives_2_1");
			builder.put(grammarAccess.getActorAccess().getAlternatives_1(), "rule__Actor__Alternatives_1");
			builder.put(grammarAccess.getPredicateAccess().getAlternatives(), "rule__Predicate__Alternatives");
			builder.put(grammarAccess.getPredicateObjectAccess().getAlternatives_1(), "rule__PredicateObject__Alternatives_1");
			builder.put(grammarAccess.getExistencePrefaceAccess().getAlternatives_3(), "rule__ExistencePreface__Alternatives_3");
			builder.put(grammarAccess.getObjectAccess().getAlternatives_1(), "rule__Object__Alternatives_1");
			builder.put(grammarAccess.getPreNominativeAccess().getAlternatives(), "rule__PreNominative__Alternatives");
			builder.put(grammarAccess.getAdverbialAccess().getAlternatives(), "rule__Adverbial__Alternatives");
			builder.put(grammarAccess.getConstraintsAccess().getAlternatives(), "rule__Constraints__Alternatives");
			builder.put(grammarAccess.getConstraintAccess().getAlternatives_1(), "rule__Constraint__Alternatives_1");
			builder.put(grammarAccess.getSetConstraintAccess().getAlternatives(), "rule__SetConstraint__Alternatives");
			builder.put(grammarAccess.getUnitConstraintsAccess().getAlternatives(), "rule__UnitConstraints__Alternatives");
			builder.put(grammarAccess.getValueAccess().getAlternatives(), "rule__Value__Alternatives");
			builder.put(grammarAccess.getReqIDAccess().getAlternatives_0(), "rule__ReqID__Alternatives_0");
			builder.put(grammarAccess.getReqIDAccess().getAlternatives_1(), "rule__ReqID__Alternatives_1");
			builder.put(grammarAccess.getRelationDelimiterAccess().getAlternatives(), "rule__RelationDelimiter__Alternatives");
			builder.put(grammarAccess.getAuxiliaryVerbAccess().getAlternatives(), "rule__AuxiliaryVerb__Alternatives");
			builder.put(grammarAccess.getConjunctionAccess().getAlternatives(), "rule__Conjunction__Alternatives");
			builder.put(grammarAccess.getComperatorsAccess().getAlternatives(), "rule__Comperators__Alternatives");
			builder.put(grammarAccess.getSizeAdverbialAccess().getAlternatives(), "rule__SizeAdverbial__Alternatives");
			builder.put(grammarAccess.getPositionAdverbialAccess().getAlternatives(), "rule__PositionAdverbial__Alternatives");
			builder.put(grammarAccess.getComparisonAdverbialAccess().getAlternatives(), "rule__ComparisonAdverbial__Alternatives");
			builder.put(grammarAccess.getQuantificationAccess().getAlternatives(), "rule__Quantification__Alternatives");
			builder.put(grammarAccess.getNegationAccess().getAlternatives(), "rule__Negation__Alternatives");
			builder.put(grammarAccess.getArticlesAccess().getAlternatives(), "rule__Articles__Alternatives");
			builder.put(grammarAccess.getRefArticlesAccess().getAlternatives(), "rule__RefArticles__Alternatives");
			builder.put(grammarAccess.getRelativePronounsSubjectAccess().getAlternatives(), "rule__RelativePronounsSubject__Alternatives");
			builder.put(grammarAccess.getRelativePronounsObjectAccess().getAlternatives(), "rule__RelativePronounsObject__Alternatives");
			builder.put(grammarAccess.getUnitAccess().getAlternatives(), "rule__Unit__Alternatives");
			builder.put(grammarAccess.getCuvatureAccess().getAlternatives(), "rule__Cuvature__Alternatives");
			builder.put(grammarAccess.getVelcoityUnitsAccess().getAlternatives(), "rule__VelcoityUnits__Alternatives");
			builder.put(grammarAccess.getMassUnitsAccess().getAlternatives(), "rule__MassUnits__Alternatives");
			builder.put(grammarAccess.getHeatUnitsAccess().getAlternatives(), "rule__HeatUnits__Alternatives");
			builder.put(grammarAccess.getPresureUnitsAccess().getAlternatives(), "rule__PresureUnits__Alternatives");
			builder.put(grammarAccess.getLengthUnitsAccess().getAlternatives(), "rule__LengthUnits__Alternatives");
			builder.put(grammarAccess.getTimeUnitsAccess().getAlternatives(), "rule__TimeUnits__Alternatives");
			builder.put(grammarAccess.getModalityAccess().getAlternatives(), "rule__Modality__Alternatives");
			builder.put(grammarAccess.getModifierAccess().getAlternatives(), "rule__Modifier__Alternatives");
			builder.put(grammarAccess.getClauseOrdinatorAccess().getAlternatives(), "rule__ClauseOrdinator__Alternatives");
			builder.put(grammarAccess.getRequirementAccess().getGroup(), "rule__Requirement__Group__0");
			builder.put(grammarAccess.getRequirementTextAccess().getGroup(), "rule__RequirementText__Group__0");
			builder.put(grammarAccess.getRequirementTextAccess().getGroup_0(), "rule__RequirementText__Group_0__0");
			builder.put(grammarAccess.getRequirementTextAccess().getGroup_2(), "rule__RequirementText__Group_2__0");
			builder.put(grammarAccess.getConditionalClauseAccess().getGroup(), "rule__ConditionalClause__Group__0");
			builder.put(grammarAccess.getMainClauseAccess().getGroup(), "rule__MainClause__Group__0");
			builder.put(grammarAccess.getClausesAccess().getGroup(), "rule__Clauses__Group__0");
			builder.put(grammarAccess.getClausesAccess().getGroup_1(), "rule__Clauses__Group_1__0");
			builder.put(grammarAccess.getModalitySentenceAccess().getGroup(), "rule__ModalitySentence__Group__0");
			builder.put(grammarAccess.getPredicateSentenceAccess().getGroup_0(), "rule__PredicateSentence__Group_0__0");
			builder.put(grammarAccess.getPredicateSentenceAccess().getGroup_1(), "rule__PredicateSentence__Group_1__0");
			builder.put(grammarAccess.getPredicateSentenceAccess().getGroup_2(), "rule__PredicateSentence__Group_2__0");
			builder.put(grammarAccess.getExistenceSentenceAccess().getGroup(), "rule__ExistenceSentence__Group__0");
			builder.put(grammarAccess.getPropertySentenceAccess().getGroup_0(), "rule__PropertySentence__Group_0__0");
			builder.put(grammarAccess.getPropertySentenceAccess().getGroup_1(), "rule__PropertySentence__Group_1__0");
			builder.put(grammarAccess.getPropertySentenceAccess().getGroup_2(), "rule__PropertySentence__Group_2__0");
			builder.put(grammarAccess.getPropertySentenceAccess().getGroup_2_3_0(), "rule__PropertySentence__Group_2_3_0__0");
			builder.put(grammarAccess.getPropertySentenceAccess().getGroup_3(), "rule__PropertySentence__Group_3__0");
			builder.put(grammarAccess.getPropertyAccess().getGroup(), "rule__Property__Group__0");
			builder.put(grammarAccess.getRelativeClauseAccess().getGroup(), "rule__RelativeClause__Group__0");
			builder.put(grammarAccess.getRelativeClauseAccess().getGroup_1(), "rule__RelativeClause__Group_1__0");
			builder.put(grammarAccess.getRelativeSentenceAccess().getGroup_0(), "rule__RelativeSentence__Group_0__0");
			builder.put(grammarAccess.getRelativeSentenceAccess().getGroup_1(), "rule__RelativeSentence__Group_1__0");
			builder.put(grammarAccess.getRelativeSentenceAccess().getGroup_1_1(), "rule__RelativeSentence__Group_1_1__0");
			builder.put(grammarAccess.getRelativeSentenceAccess().getGroup_2(), "rule__RelativeSentence__Group_2__0");
			builder.put(grammarAccess.getActorsAccess().getGroup(), "rule__Actors__Group__0");
			builder.put(grammarAccess.getActorsAccess().getGroup_1(), "rule__Actors__Group_1__0");
			builder.put(grammarAccess.getActorAccess().getGroup(), "rule__Actor__Group__0");
			builder.put(grammarAccess.getPredicateAccess().getGroup_2(), "rule__Predicate__Group_2__0");
			builder.put(grammarAccess.getPredicateObjectAccess().getGroup(), "rule__PredicateObject__Group__0");
			builder.put(grammarAccess.getExistencePrefaceAccess().getGroup(), "rule__ExistencePreface__Group__0");
			builder.put(grammarAccess.getObjectsAccess().getGroup(), "rule__Objects__Group__0");
			builder.put(grammarAccess.getObjectsAccess().getGroup_1(), "rule__Objects__Group_1__0");
			builder.put(grammarAccess.getObjectAccess().getGroup(), "rule__Object__Group__0");
			builder.put(grammarAccess.getPropertiesAccess().getGroup(), "rule__Properties__Group__0");
			builder.put(grammarAccess.getPropertiesAccess().getGroup_1(), "rule__Properties__Group_1__0");
			builder.put(grammarAccess.getConstraintAccess().getGroup(), "rule__Constraint__Group__0");
			builder.put(grammarAccess.getConstraintOrdinatorsAccess().getGroup(), "rule__ConstraintOrdinators__Group__0");
			builder.put(grammarAccess.getTimeConstraintAccess().getGroup(), "rule__TimeConstraint__Group__0");
			builder.put(grammarAccess.getIntervallConstraintsAccess().getGroup(), "rule__IntervallConstraints__Group__0");
			builder.put(grammarAccess.getValueSetAccess().getGroup(), "rule__ValueSet__Group__0");
			builder.put(grammarAccess.getValueSetAccess().getGroup_2(), "rule__ValueSet__Group_2__0");
			builder.put(grammarAccess.getObjectSetAccess().getGroup(), "rule__ObjectSet__Group__0");
			builder.put(grammarAccess.getObjectSetAccess().getGroup_2(), "rule__ObjectSet__Group_2__0");
			builder.put(grammarAccess.getIntValueAccess().getGroup(), "rule__IntValue__Group__0");
			builder.put(grammarAccess.getFloatValueAccess().getGroup(), "rule__FloatValue__Group__0");
			builder.put(grammarAccess.getReqIDAccess().getGroup(), "rule__ReqID__Group__0");
			builder.put(grammarAccess.getWORDAccess().getGroup(), "rule__WORD__Group__0");
			builder.put(grammarAccess.getWORDAccess().getGroup_1(), "rule__WORD__Group_1__0");
			builder.put(grammarAccess.getRelationDelimiterAccess().getGroup_2(), "rule__RelationDelimiter__Group_2__0");
			builder.put(grammarAccess.getRelationDelimiterAccess().getGroup_3(), "rule__RelationDelimiter__Group_3__0");
			builder.put(grammarAccess.getQuantificationAccess().getGroup_6(), "rule__Quantification__Group_6__0");
			builder.put(grammarAccess.getModelAccess().getRequirementsAssignment(), "rule__Model__RequirementsAssignment");
			builder.put(grammarAccess.getRequirementAccess().getReqIDAssignment_1(), "rule__Requirement__ReqIDAssignment_1");
			builder.put(grammarAccess.getRequirementAccess().getTextAssignment_3(), "rule__Requirement__TextAssignment_3");
			builder.put(grammarAccess.getRequirementTextAccess().getCondClausesAssignment_0_0(), "rule__RequirementText__CondClausesAssignment_0_0");
			builder.put(grammarAccess.getRequirementTextAccess().getMainclausesAssignment_1(), "rule__RequirementText__MainclausesAssignment_1");
			builder.put(grammarAccess.getRequirementTextAccess().getCondClausesAssignment_2_1(), "rule__RequirementText__CondClausesAssignment_2_1");
			builder.put(grammarAccess.getConditionalClauseAccess().getOrdinatorAssignment_0(), "rule__ConditionalClause__OrdinatorAssignment_0");
			builder.put(grammarAccess.getConditionalClauseAccess().getClausesAssignment_1(), "rule__ConditionalClause__ClausesAssignment_1");
			builder.put(grammarAccess.getMainClauseAccess().getModifierAssignment_0(), "rule__MainClause__ModifierAssignment_0");
			builder.put(grammarAccess.getMainClauseAccess().getClausesAssignment_1(), "rule__MainClause__ClausesAssignment_1");
			builder.put(grammarAccess.getClausesAccess().getClausesAssignment_0(), "rule__Clauses__ClausesAssignment_0");
			builder.put(grammarAccess.getClausesAccess().getConjunctionAssignment_1_0(), "rule__Clauses__ConjunctionAssignment_1_0");
			builder.put(grammarAccess.getClausesAccess().getClausesAssignment_1_1(), "rule__Clauses__ClausesAssignment_1_1");
			builder.put(grammarAccess.getModalitySentenceAccess().getActorsAssignment_0(), "rule__ModalitySentence__ActorsAssignment_0");
			builder.put(grammarAccess.getModalitySentenceAccess().getModelityAssignment_1(), "rule__ModalitySentence__ModelityAssignment_1");
			builder.put(grammarAccess.getModalitySentenceAccess().getNegationAssignment_2(), "rule__ModalitySentence__NegationAssignment_2");
			builder.put(grammarAccess.getModalitySentenceAccess().getAuxiliarVerbAssignment_3(), "rule__ModalitySentence__AuxiliarVerbAssignment_3");
			builder.put(grammarAccess.getModalitySentenceAccess().getPredicateAssignment_4(), "rule__ModalitySentence__PredicateAssignment_4");
			builder.put(grammarAccess.getModalitySentenceAccess().getConstraintsAssignment_5(), "rule__ModalitySentence__ConstraintsAssignment_5");
			builder.put(grammarAccess.getPredicateSentenceAccess().getActorsAssignment_0_0(), "rule__PredicateSentence__ActorsAssignment_0_0");
			builder.put(grammarAccess.getPredicateSentenceAccess().getPredicateAssignment_0_1(), "rule__PredicateSentence__PredicateAssignment_0_1");
			builder.put(grammarAccess.getPredicateSentenceAccess().getConstraintsAssignment_0_2(), "rule__PredicateSentence__ConstraintsAssignment_0_2");
			builder.put(grammarAccess.getPredicateSentenceAccess().getActorsAssignment_1_0(), "rule__PredicateSentence__ActorsAssignment_1_0");
			builder.put(grammarAccess.getPredicateSentenceAccess().getAuxiliarVerbAssignment_1_1(), "rule__PredicateSentence__AuxiliarVerbAssignment_1_1");
			builder.put(grammarAccess.getPredicateSentenceAccess().getNegationAssignment_1_2(), "rule__PredicateSentence__NegationAssignment_1_2");
			builder.put(grammarAccess.getPredicateSentenceAccess().getAuxiliarVerbAssignment_1_3(), "rule__PredicateSentence__AuxiliarVerbAssignment_1_3");
			builder.put(grammarAccess.getPredicateSentenceAccess().getPredicateAssignment_1_4(), "rule__PredicateSentence__PredicateAssignment_1_4");
			builder.put(grammarAccess.getPredicateSentenceAccess().getConstraintsAssignment_1_5(), "rule__PredicateSentence__ConstraintsAssignment_1_5");
			builder.put(grammarAccess.getPredicateSentenceAccess().getActorsAssignment_2_0(), "rule__PredicateSentence__ActorsAssignment_2_0");
			builder.put(grammarAccess.getPredicateSentenceAccess().getAuxiliarVerbAssignment_2_1(), "rule__PredicateSentence__AuxiliarVerbAssignment_2_1");
			builder.put(grammarAccess.getPredicateSentenceAccess().getNegationAssignment_2_2(), "rule__PredicateSentence__NegationAssignment_2_2");
			builder.put(grammarAccess.getPredicateSentenceAccess().getObjectAssignment_2_3(), "rule__PredicateSentence__ObjectAssignment_2_3");
			builder.put(grammarAccess.getPredicateSentenceAccess().getConstraintsAssignment_2_4(), "rule__PredicateSentence__ConstraintsAssignment_2_4");
			builder.put(grammarAccess.getExistenceSentenceAccess().getActorsAssignment_1(), "rule__ExistenceSentence__ActorsAssignment_1");
			builder.put(grammarAccess.getExistenceSentenceAccess().getRelativeClauseAssignment_3(), "rule__ExistenceSentence__RelativeClauseAssignment_3");
			builder.put(grammarAccess.getPropertySentenceAccess().getPropertyAssignment_0_0(), "rule__PropertySentence__PropertyAssignment_0_0");
			builder.put(grammarAccess.getPropertySentenceAccess().getModelityAssignment_0_1(), "rule__PropertySentence__ModelityAssignment_0_1");
			builder.put(grammarAccess.getPropertySentenceAccess().getNegationAssignment_0_2(), "rule__PropertySentence__NegationAssignment_0_2");
			builder.put(grammarAccess.getPropertySentenceAccess().getAuxiliarVerbAssignment_0_3(), "rule__PropertySentence__AuxiliarVerbAssignment_0_3");
			builder.put(grammarAccess.getPropertySentenceAccess().getPredicateAssignment_0_4(), "rule__PropertySentence__PredicateAssignment_0_4");
			builder.put(grammarAccess.getPropertySentenceAccess().getConstraintsAssignment_0_5(), "rule__PropertySentence__ConstraintsAssignment_0_5");
			builder.put(grammarAccess.getPropertySentenceAccess().getPropertyAssignment_1_0(), "rule__PropertySentence__PropertyAssignment_1_0");
			builder.put(grammarAccess.getPropertySentenceAccess().getModelityAssignment_1_1(), "rule__PropertySentence__ModelityAssignment_1_1");
			builder.put(grammarAccess.getPropertySentenceAccess().getNegationAssignment_1_2(), "rule__PropertySentence__NegationAssignment_1_2");
			builder.put(grammarAccess.getPropertySentenceAccess().getAuxiliarVerbAssignment_1_3(), "rule__PropertySentence__AuxiliarVerbAssignment_1_3");
			builder.put(grammarAccess.getPropertySentenceAccess().getObjectAssignment_1_4(), "rule__PropertySentence__ObjectAssignment_1_4");
			builder.put(grammarAccess.getPropertySentenceAccess().getConstraintsAssignment_1_5(), "rule__PropertySentence__ConstraintsAssignment_1_5");
			builder.put(grammarAccess.getPropertySentenceAccess().getPropertyAssignment_2_0(), "rule__PropertySentence__PropertyAssignment_2_0");
			builder.put(grammarAccess.getPropertySentenceAccess().getAuxiliarVerbAssignment_2_1(), "rule__PropertySentence__AuxiliarVerbAssignment_2_1");
			builder.put(grammarAccess.getPropertySentenceAccess().getNegationAssignment_2_2(), "rule__PropertySentence__NegationAssignment_2_2");
			builder.put(grammarAccess.getPropertySentenceAccess().getPredicateAssignment_2_3_0_0_0(), "rule__PropertySentence__PredicateAssignment_2_3_0_0_0");
			builder.put(grammarAccess.getPropertySentenceAccess().getObjectAssignment_2_3_0_0_1(), "rule__PropertySentence__ObjectAssignment_2_3_0_0_1");
			builder.put(grammarAccess.getPropertySentenceAccess().getConstraintsAssignment_2_3_0_1(), "rule__PropertySentence__ConstraintsAssignment_2_3_0_1");
			builder.put(grammarAccess.getPropertySentenceAccess().getConstraintsAssignment_2_3_1(), "rule__PropertySentence__ConstraintsAssignment_2_3_1");
			builder.put(grammarAccess.getPropertySentenceAccess().getPropertyAssignment_3_0(), "rule__PropertySentence__PropertyAssignment_3_0");
			builder.put(grammarAccess.getPropertySentenceAccess().getPredicateWordAssignment_3_1_0(), "rule__PropertySentence__PredicateWordAssignment_3_1_0");
			builder.put(grammarAccess.getPropertySentenceAccess().getPredicateWordAssignment_3_1_1(), "rule__PropertySentence__PredicateWordAssignment_3_1_1");
			builder.put(grammarAccess.getPropertySentenceAccess().getObjectAssignment_3_2(), "rule__PropertySentence__ObjectAssignment_3_2");
			builder.put(grammarAccess.getPropertySentenceAccess().getConstraintsAssignment_3_3(), "rule__PropertySentence__ConstraintsAssignment_3_3");
			builder.put(grammarAccess.getPropertyAccess().getQuantifierAssignment_0_0(), "rule__Property__QuantifierAssignment_0_0");
			builder.put(grammarAccess.getPropertyAccess().getArticleAssignment_0_1(), "rule__Property__ArticleAssignment_0_1");
			builder.put(grammarAccess.getPropertyAccess().getArticleAssignment_0_2(), "rule__Property__ArticleAssignment_0_2");
			builder.put(grammarAccess.getPropertyAccess().getObjectAssignment_1_0(), "rule__Property__ObjectAssignment_1_0");
			builder.put(grammarAccess.getPropertyAccess().getObjectAssignment_1_1(), "rule__Property__ObjectAssignment_1_1");
			builder.put(grammarAccess.getPropertyAccess().getPropertyAssignment_3_0(), "rule__Property__PropertyAssignment_3_0");
			builder.put(grammarAccess.getPropertyAccess().getPropertyAssignment_3_1(), "rule__Property__PropertyAssignment_3_1");
			builder.put(grammarAccess.getRelativeClauseAccess().getSentenceAssignment_0(), "rule__RelativeClause__SentenceAssignment_0");
			builder.put(grammarAccess.getRelativeClauseAccess().getConjunctionAssignment_1_0(), "rule__RelativeClause__ConjunctionAssignment_1_0");
			builder.put(grammarAccess.getRelativeClauseAccess().getCondClausesAssignment_1_1(), "rule__RelativeClause__CondClausesAssignment_1_1");
			builder.put(grammarAccess.getRelativeSentenceAccess().getPronounAssignment_0_0(), "rule__RelativeSentence__PronounAssignment_0_0");
			builder.put(grammarAccess.getRelativeSentenceAccess().getModelityAssignment_0_1(), "rule__RelativeSentence__ModelityAssignment_0_1");
			builder.put(grammarAccess.getRelativeSentenceAccess().getNegationAssignment_0_2(), "rule__RelativeSentence__NegationAssignment_0_2");
			builder.put(grammarAccess.getRelativeSentenceAccess().getPredicateAssignment_0_3(), "rule__RelativeSentence__PredicateAssignment_0_3");
			builder.put(grammarAccess.getRelativeSentenceAccess().getConstraintsAssignment_0_4(), "rule__RelativeSentence__ConstraintsAssignment_0_4");
			builder.put(grammarAccess.getRelativeSentenceAccess().getPronounAssignment_1_0(), "rule__RelativeSentence__PronounAssignment_1_0");
			builder.put(grammarAccess.getRelativeSentenceAccess().getAuxiliarAssignment_1_1_0(), "rule__RelativeSentence__AuxiliarAssignment_1_1_0");
			builder.put(grammarAccess.getRelativeSentenceAccess().getNegationAssignment_1_1_1(), "rule__RelativeSentence__NegationAssignment_1_1_1");
			builder.put(grammarAccess.getRelativeSentenceAccess().getPredicateAssignment_1_2(), "rule__RelativeSentence__PredicateAssignment_1_2");
			builder.put(grammarAccess.getRelativeSentenceAccess().getConstraintsAssignment_1_3(), "rule__RelativeSentence__ConstraintsAssignment_1_3");
			builder.put(grammarAccess.getRelativeSentenceAccess().getPronounAssignment_2_0(), "rule__RelativeSentence__PronounAssignment_2_0");
			builder.put(grammarAccess.getRelativeSentenceAccess().getClauseAssignment_2_1_0(), "rule__RelativeSentence__ClauseAssignment_2_1_0");
			builder.put(grammarAccess.getRelativeSentenceAccess().getClauseAssignment_2_1_1(), "rule__RelativeSentence__ClauseAssignment_2_1_1");
			builder.put(grammarAccess.getActorsAccess().getActorsAssignment_0(), "rule__Actors__ActorsAssignment_0");
			builder.put(grammarAccess.getActorsAccess().getConjunctionAssignment_1_0(), "rule__Actors__ConjunctionAssignment_1_0");
			builder.put(grammarAccess.getActorsAccess().getActorsAssignment_1_1(), "rule__Actors__ActorsAssignment_1_1");
			builder.put(grammarAccess.getActorAccess().getActorAssignment_1_0(), "rule__Actor__ActorAssignment_1_0");
			builder.put(grammarAccess.getActorAccess().getActorAssignment_1_1(), "rule__Actor__ActorAssignment_1_1");
			builder.put(grammarAccess.getPredicateAccess().getPredicatesAssignment_0(), "rule__Predicate__PredicatesAssignment_0");
			builder.put(grammarAccess.getPredicateAccess().getPredicatesAssignment_1(), "rule__Predicate__PredicatesAssignment_1");
			builder.put(grammarAccess.getPredicateAccess().getPredicatesAssignment_2_0(), "rule__Predicate__PredicatesAssignment_2_0");
			builder.put(grammarAccess.getPredicateAccess().getObjectAssignment_2_1(), "rule__Predicate__ObjectAssignment_2_1");
			builder.put(grammarAccess.getPredicateObjectAccess().getArticleAssignment_0(), "rule__PredicateObject__ArticleAssignment_0");
			builder.put(grammarAccess.getPredicateObjectAccess().getObjectAssignment_1_0(), "rule__PredicateObject__ObjectAssignment_1_0");
			builder.put(grammarAccess.getPredicateObjectAccess().getObjectAssignment_1_1(), "rule__PredicateObject__ObjectAssignment_1_1");
			builder.put(grammarAccess.getExistencePrefaceAccess().getModifierAssignment_2(), "rule__ExistencePreface__ModifierAssignment_2");
			builder.put(grammarAccess.getObjectsAccess().getObjectsAssignment_0(), "rule__Objects__ObjectsAssignment_0");
			builder.put(grammarAccess.getObjectsAccess().getConjunctionAssignment_1_0(), "rule__Objects__ConjunctionAssignment_1_0");
			builder.put(grammarAccess.getObjectsAccess().getObjectsAssignment_1_1(), "rule__Objects__ObjectsAssignment_1_1");
			builder.put(grammarAccess.getObjectAccess().getObjectAssignment_1_0(), "rule__Object__ObjectAssignment_1_0");
			builder.put(grammarAccess.getObjectAccess().getObjectAssignment_1_1(), "rule__Object__ObjectAssignment_1_1");
			builder.put(grammarAccess.getPreNominativeAccess().getDeterminerAssignment_0(), "rule__PreNominative__DeterminerAssignment_0");
			builder.put(grammarAccess.getPreNominativeAccess().getArticleAssignment_1(), "rule__PreNominative__ArticleAssignment_1");
			builder.put(grammarAccess.getPreNominativeAccess().getArticleAssignment_2(), "rule__PreNominative__ArticleAssignment_2");
			builder.put(grammarAccess.getPropertiesAccess().getPropertiesAssignment_0(), "rule__Properties__PropertiesAssignment_0");
			builder.put(grammarAccess.getPropertiesAccess().getConjunctionAssignment_1_0(), "rule__Properties__ConjunctionAssignment_1_0");
			builder.put(grammarAccess.getPropertiesAccess().getPropertiesAssignment_1_1(), "rule__Properties__PropertiesAssignment_1_1");
			builder.put(grammarAccess.getConstraintsAccess().getTimeConstraintAssignment_0(), "rule__Constraints__TimeConstraintAssignment_0");
			builder.put(grammarAccess.getConstraintsAccess().getConstraintAssignment_1(), "rule__Constraints__ConstraintAssignment_1");
			builder.put(grammarAccess.getConstraintAccess().getOrdinatorAssignment_0(), "rule__Constraint__OrdinatorAssignment_0");
			builder.put(grammarAccess.getConstraintAccess().getConstraintAssignment_1_0(), "rule__Constraint__ConstraintAssignment_1_0");
			builder.put(grammarAccess.getConstraintAccess().getConstraintAssignment_1_1(), "rule__Constraint__ConstraintAssignment_1_1");
			builder.put(grammarAccess.getConstraintAccess().getConstraintAssignment_1_2(), "rule__Constraint__ConstraintAssignment_1_2");
			builder.put(grammarAccess.getConstraintOrdinatorsAccess().getStuffingAssignment_0(), "rule__ConstraintOrdinators__StuffingAssignment_0");
			builder.put(grammarAccess.getConstraintOrdinatorsAccess().getAdverbialAssignment_1(), "rule__ConstraintOrdinators__AdverbialAssignment_1");
			builder.put(grammarAccess.getConstraintOrdinatorsAccess().getComperatorAssignment_2(), "rule__ConstraintOrdinators__ComperatorAssignment_2");
			builder.put(grammarAccess.getSetConstraintAccess().getSetAssignment_0(), "rule__SetConstraint__SetAssignment_0");
			builder.put(grammarAccess.getSetConstraintAccess().getSetAssignment_1(), "rule__SetConstraint__SetAssignment_1");
			builder.put(grammarAccess.getTimeConstraintAccess().getOrdinatorAssignment_0(), "rule__TimeConstraint__OrdinatorAssignment_0");
			builder.put(grammarAccess.getTimeConstraintAccess().getTimeAssignment_1(), "rule__TimeConstraint__TimeAssignment_1");
			builder.put(grammarAccess.getTimeConstraintAccess().getUnitAssignment_2(), "rule__TimeConstraint__UnitAssignment_2");
			builder.put(grammarAccess.getObjectConstraintAccess().getObjectAssignment(), "rule__ObjectConstraint__ObjectAssignment");
			builder.put(grammarAccess.getIntervallConstraintsAccess().getLowerAssignment_1(), "rule__IntervallConstraints__LowerAssignment_1");
			builder.put(grammarAccess.getIntervallConstraintsAccess().getHigherAssignment_3(), "rule__IntervallConstraints__HigherAssignment_3");
			builder.put(grammarAccess.getSingleValueConstraintsAccess().getValueAssignment(), "rule__SingleValueConstraints__ValueAssignment");
			builder.put(grammarAccess.getValueSetAccess().getElementsAssignment_1(), "rule__ValueSet__ElementsAssignment_1");
			builder.put(grammarAccess.getValueSetAccess().getElementsAssignment_2_1(), "rule__ValueSet__ElementsAssignment_2_1");
			builder.put(grammarAccess.getObjectSetAccess().getElementsAssignment_1(), "rule__ObjectSet__ElementsAssignment_1");
			builder.put(grammarAccess.getObjectSetAccess().getElementsAssignment_2_1(), "rule__ObjectSet__ElementsAssignment_2_1");
			builder.put(grammarAccess.getIntValueAccess().getValueAssignment_0(), "rule__IntValue__ValueAssignment_0");
			builder.put(grammarAccess.getIntValueAccess().getUnitAssignment_1(), "rule__IntValue__UnitAssignment_1");
			builder.put(grammarAccess.getFloatValueAccess().getValueAssignment_0(), "rule__FloatValue__ValueAssignment_0");
			builder.put(grammarAccess.getFloatValueAccess().getUnitAssignment_1(), "rule__FloatValue__UnitAssignment_1");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private RequirementDSLGrammarAccess grammarAccess;

	@Override
	protected InternalRequirementDSLParser createParser() {
		InternalRequirementDSLParser result = new InternalRequirementDSLParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS_HYPHEN" };
	}

	public RequirementDSLGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(RequirementDSLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
