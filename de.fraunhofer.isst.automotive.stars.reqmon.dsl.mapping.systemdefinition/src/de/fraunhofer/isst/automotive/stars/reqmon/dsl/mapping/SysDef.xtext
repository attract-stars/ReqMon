grammar de.fraunhofer.isst.automotive.stars.reqmon.dsl.mapping.SysDef with org.eclipse.xtext.common.Terminals //hidden(ML_COMMENT)

generate sysDef "http://www.fraunhofer.de/isst/automotive/stars/reqmon/dsl/mapping/SysDef"

Model:
	nodes+=Node*
;
	
Node:
	version=Version | systemNode=SystemNode
	
;

Version:
	version='<?xml' info+=NodeInfo+ '?>'
;

NodeInfo:
	info+=ID (':' info+=ID)* '=' text=STRING
;

SystemNode:
	node='<system' info+=NodeInfo* id=IDAtrr '>' 
	namenode='<name>' name = ID? '</name>' 
	versionNode=VersionNode? 
	descriptionNode=DescriptionNode? 
	messageNode=MessageNode?
	signalNode+=SignalNode* 
	datastruct=DataStructureNode?
	'</system>' 
;

IDAtrr:
	id='id=' int=STRING
;

VersionNode:
	node='<version>' name=STRING? '</version>'
;

DescriptionNode:
	node='<description>' name=STRING? '</description>'
;

MessageNode:
	node='<message>' 
	nameNode='<name>' name = STRING? '</name>'
	alloc=AllocationNode 
	datas=DataNode 
	'</message>'
;

AllocationNode:
	node='<allocation>' 
	bit=BitNode 
	loc=LocationNode 
	'</allocation>'
;

// Value instead of IDs?
BitNode:
	node='<bit_size>' name=STRING? '</bit_size>'
;

// Value instead of IDs?
LocationNode:
	node='<location>' name=STRING? '</location>'
;

DataNode:
	node='<data_objects>' signal+=SignalRefNode+ '</data_objects>'
;

SignalRefNode:
	node='<signal_object>' ref=RefNode '</signal_object>'
;

RefNode:
	node='<ref>' name=STRING? '</ref>'
;

SignalNode:
	node='<signal' id=IDAtrr '>' 
	nameNode='<name>' name = STRING? '</name>' 
	descriptionNode=DescriptionNode? 
	datatype=DataTypeNode 
	alloc=AllocationNode 
	minval=MinValueNode 
	maxval=MaxValueNode 
	prefval=PrefValueNode? 
	step=StepSizeNode? 
	'</signal>'
;

DataTypeNode:
	node='<datatype>' name=STRING? '</datatype>'
;

// Value instead of IDs?
MinValueNode:
	node='<min_value>' name=STRING? '</min_value>'
;

// Value instead of IDs?
MaxValueNode:
	node='<max_value>' name=STRING? '</max_value>'
;

// Value instead of IDs?
PrefValueNode:
	node='<preferred_value>' name=STRING? '</preferred_value>'
;

// Value instead of IDs?
StepSizeNode:
	node='<step_size>' name=STRING? '</step_size>'
;

DataStructureNode:
	node='<data_structure' id=IDAtrr '>' 
	((nameNode='<name>' name = STRING? '</name>') & 
	description=DescriptionNode? & 
	alloc=AllocationNode & 
	class+=ClassNode+) 
	'</data_structure>'
;

ClassNode:
	node='<class>' 
	nameNode='<name>' name = STRING? '</name>' 
	description=DescriptionNode? 
	inheritance=InheritanceNode?
	attribute+=AttributeNode* 
	'</class>'
;

InheritanceNode:
	node='<inheritance_from>' name=STRING? '</inheritance_from>'
;

AttributeNode:
	node='<attribute>' 
	nameNode='<name>' name = STRING? '</name>' 
	description=DescriptionNode? 
	attrtype=AttrTypeNode 
	'</attribute>'
;

AttrTypeNode:
	node='<attrType>' type=Types '</attrType>'
;

Types:
	type=Type | list=List | set=Set | newtype=newType
;

Type:
	type='<type>' name=TypeDefinition '</type>'
;

List:
	list='<list>' type+=Type+ '</list>'
;

Set:
	set='<set>' type+=Type+ '</set>'
;

newType:
	type='<newType>' 
	nameNode='<name>' name = STRING? '</name>' 
	description=DescriptionNode 
	'</newType>'
;

@Override 
terminal ML_COMMENT: 
   '/*' -> '*/' |
   	'<!--' -> '-->'
;

Value:
	INT | INT '.' INT
;

TypeDefinition:
	'integer' | 'float' | 'short' | 'double' | 'byte' | 'string' | 'char' |
	'time' | 'date' | 'boolean' | 'newType' | 'class' | 'signal'
;

