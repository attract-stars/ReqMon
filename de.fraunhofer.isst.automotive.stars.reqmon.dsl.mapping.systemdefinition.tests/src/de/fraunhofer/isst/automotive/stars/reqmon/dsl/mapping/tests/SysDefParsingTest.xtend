/*
 * generated by Xtext 2.17.1
 */
package de.fraunhofer.isst.automotive.stars.reqmon.dsl.mapping.tests

import com.google.inject.Inject
import de.fraunhofer.isst.automotive.stars.reqmon.dsl.mapping.sysDef.Model
import org.eclipse.xtext.testing.InjectWith
import org.eclipse.xtext.testing.extensions.InjectionExtension
import org.eclipse.xtext.testing.util.ParseHelper
import org.junit.jupiter.api.Assertions
import org.junit.jupiter.api.Test
import org.junit.jupiter.api.^extension.ExtendWith

@ExtendWith(InjectionExtension)
@InjectWith(SysDefInjectorProvider)
class SysDefParsingTest {
	@Inject
	ParseHelper<Model> parseHelper
	
	@Test
	def void loadModel() {
		val result = parseHelper.parse('''
			<?xml version="1.0" encoding="UTF-8"?>
			
			<system
			xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
			xsi:noNamespaceSchemaLocation="system.xsd"
			id='123'>
			<!-- xsi:schemaLocation="http://www.fraunhofer.de/isst/automotive/stars/reqmon/dsl/mapping/system system.xsd" -->
			
				<name>mycar</name>
				<version>'1.0'</version>
				<description>'my car is the main vehicle'</description>
				<message>
					<name>'all signals'</name>
					<allocation>
						<bit_size>'1024'</bit_size>
						<location>'1000'</location>
					</allocation>
					<data_objects>
						<signal_object>
							<ref>'1'</ref>
						</signal_object>
						<signal_object>
							<ref>'2'</ref>
						</signal_object>
						<signal_object>
							<ref>'3'</ref>
						</signal_object>
						<signal_object>
							<ref>'4'</ref>
						</signal_object>
						<signal_object>
							<ref>'5'</ref>
						</signal_object>
					</data_objects>
				</message>
				<signal id='1'>
					<name>'velocity'</name>
					<description>'velocity description'</description>
					<datatype>'m/s'</datatype>
					<allocation>
						<bit_size>'64'</bit_size>
						<location>'1268'</location>
					</allocation>
					<min_value>'0.0'</min_value>
					<max_value>'100.0'</max_value>
					<preferred_value>'50.0'</preferred_value>
					<step_size>'0.5'</step_size>
				</signal>
				<signal id='2'>
					<name>'front distance'</name>
					<description>
					'distance to a vehicle or barrier in front the car'
					</description>
					<datatype>'m'</datatype>
					<allocation>
						<bit_size>'8'</bit_size>
						<location>'1276'</location>
					</allocation>
					<min_value>'0.5'</min_value>
					<max_value>'1000'</max_value>
					<preferred_value>'30'</preferred_value>
					<step_size>'0.5'</step_size>
				</signal>
				<signal id='3'>
					<name>'back distance'</name>
					<description>
					'distance to a vehicle or barrier behind the car'
					</description>
					<datatype>'m'</datatype>
					<allocation>
						<bit_size>'8'</bit_size>
						<location>'1284'</location>
					</allocation>
					<min_value>'0.5'</min_value>
					<max_value>'1000'</max_value>
					<preferred_value>'30'</preferred_value>
					<step_size>'0.5'</step_size>
				</signal>
				<signal id='4'>
					<name>'left distance'</name>
					<description>
					'distance to a vehicle or barrier in the left of the car'
					</description>
					<datatype>'m'</datatype>
					<allocation>
						<bit_size>'8'</bit_size>
						<location>'1292'</location>
					</allocation>
					<min_value>'0.1'</min_value>
					<max_value>'1000'</max_value>
					<preferred_value>'2'</preferred_value>
					<step_size>'0.1'</step_size>
				</signal>
				<signal id='5'>
					<name>'right distance'</name>
					<description>
					'distance to a vehicle or barrier in the right of the car'
					</description>
					<datatype>'m'</datatype>
					<allocation>
						<bit_size>'8'</bit_size>
						<location>'1300'</location>
					</allocation>
					<min_value>'0.1'</min_value>
					<max_value>'1000'</max_value>
					<preferred_value>'2'</preferred_value>
					<step_size>'0.1'</step_size>
				</signal>
				<signal id='6'>
					<name>'curvature'</name>
					<description>
					'curvature of the actual lane'
					</description>
					<datatype>'rad/m'</datatype>
					<allocation>
						<bit_size>'8'</bit_size>
						<location>'1308'</location>
					</allocation>
					<min_value>'0'</min_value>
					<max_value>'100'</max_value>
					<preferred_value>'0'</preferred_value>
					<step_size>'1'</step_size>
				</signal>
				<data_structure id='1'>
					<name>'data structure'</name>
					<description>'structure description'</description>
					<allocation>
						<bit_size>'2048'</bit_size>
						<location>'6000'</location>
					</allocation>
					<class> 
						<name>'vehicle'</name>
						<inheritance_from></inheritance_from>
						<attribute>
							<name>'exist'</name>
							<attrType>
								<type>boolean</type>
							</attrType>
						</attribute>
						<attribute>
							<name>'lane change'</name>
							<attrType>
								<type>boolean</type>
							</attrType>
						</attribute>
						<attribute>
							<name>'position'</name>
							<attrType>
								<type>class</type>
							</attrType>
						</attribute>
						<attribute>
							<name>'front distance'</name>
							<attrType>
								<type>signal</type>
							</attrType>
						</attribute>
						<attribute>
							<name>'back distance'</name>
							<attrType>
								<type>signal</type>
							</attrType>
						</attribute>
						<attribute>
							<name>'left distance'</name>
							<attrType>
								<type>signal</type>
							</attrType>
						</attribute>
						<attribute>
							<name>'right distance'</name>
							<attrType>
								<type>signal</type>
							</attrType>
						</attribute>
						<attribute>
							<name>'velocity'</name>
							<attrType>
								<type>signal</type>
							</attrType>
						</attribute>
					</class>
					<class> 
						<name>'this car'</name>
						<inheritance_from>"vehicle"</inheritance_from>
					</class>
					<class> 
						<name>'right vehicle'</name>
						<inheritance_from>"vehicle"</inheritance_from>
					</class>
					<class> 
						<name>'left vehicle'</name>
						<inheritance_from>"vehicle"</inheritance_from>
					</class>
					<class> 
						<name>'front vehicle'</name>
						<inheritance_from>"vehicle"</inheritance_from>
					</class>
					<class> 
						<name>'back vehicle'</name>
						<inheritance_from>"vehicle"</inheritance_from>
					</class>
					<class> 
						<name>'lane'</name>
						<attribute>
							<name>'left lane'</name>
							<attrType>
								<type>class</type>
							</attrType>
						</attribute>
						<attribute>
							<name>'right lane'</name>
							<attrType>
								<type>class</type>
							</attrType>
						</attribute>
						<attribute>
							<name>'center'</name>
							<attrType>
								<type>boolean</type>
							</attrType>
						</attribute>
						<attribute>
							<name>'marking'</name>
							<attrType>
								<type>class</type>
							</attrType>
						</attribute>
						<attribute>
							<name>'restricted'</name>
							<attrType>
								<type>boolean</type>
							</attrType>
						</attribute>
						<attribute>
							<name>'emergency'</name>
							<attrType>
								<type>boolean</type>
							</attrType>
						</attribute>
						<attribute>
							<name>'highway on ramp'</name>
							<attrType>
								<type>boolean</type>
							</attrType>
						</attribute>
						<attribute>
							<name>'curvature'</name>
							<attrType>
								<type>signal</type>
							</attrType>
						</attribute>
					</class>
					<class>
						<name>'right lane'</name>
						<inheritance_from>'lane'</inheritance_from>
					</class>
					<class>
						<name>'left lane'</name>
						<inheritance_from>'lane'</inheritance_from>
					</class>
					<class> 
						<name>'marking'</name>
						<attribute>
							<name>'solid'</name>
							<attrType>
								<type>boolean</type>
							</attrType>
						</attribute>
					</class>
					<class> 
						<name>'position'</name>
						<inheritance_from></inheritance_from>
						<attribute>
							<name>'lane'</name>
							<attrType>
								<type>class</type>
							</attrType>
						</attribute>
						<attribute>
							<name>'front vehicle'</name>
							<attrType>
								<type>class</type>
							</attrType>
						</attribute>
						<attribute>
							<name>'back vehicle'</name>
							<attrType>
								<type>class</type>
							</attrType>
						</attribute>
						<attribute>
							<name>'left vehicle'</name>
							<attrType>
								<type>class</type>
							</attrType>
						</attribute>
						<attribute>
							<name>'right vehicle'</name>
							<attrType>
								<type>class</type>
							</attrType>
						</attribute>
					</class>
					<class>
						<name>'unknown'</name>
					</class>
				</data_structure>
			</system>
		''')
		Assertions.assertNotNull(result)
		val errors = result.eResource.errors
		Assertions.assertTrue(errors.isEmpty, '''Unexpected errors: «errors.join(", ")»''')
	}
}
